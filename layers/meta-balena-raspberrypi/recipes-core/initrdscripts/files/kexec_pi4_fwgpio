#!/bin/sh

# shellcheck disable=SC1091
. /usr/libexec/os-helpers-logging

kexec_pi4_fwgpio_enabled() {
    if [ "$bootparam_balena_stage2" = "true" ]; then
        return 0
    fi

    if [ -n "$bootparam_balena_pi4_fwgpio" ]; then
        return 0
    fi

    return 1
}

kexec_pi4_fwgpio_run() {
    # Find the wifi/bt device labelled "mmcnr" in the device tree
    WIFI_DT_NODE="mmcnr"
    WIFI_SYSFS_PATH="$(find /sys/bus/platform/devices -name "*.${WIFI_DT_NODE}")"

    # Exactly one device should match, but let's be defensive
    if [ "$(echo "${WIFI_SYSFS_PATH}" | wc -l)" -gt 1 ]; then
        warn "Multiple '${WIFI_DT_NODE}' devices found, will use the first one"
        WIFI_SYSFS_PATH="$(echo "${WIFI_SYSFS_PATH}" | head -n 1)"
    fi

    # readlink here, because the driver unbinds as we manipulate the GPIOs
    WIFI_DRIVER_DIR="$(readlink -f "${WIFI_SYSFS_PATH}/driver")"
    WIFI_DEV="$(basename "${WIFI_SYSFS_PATH}")"

    GPIOCHIP="gpiochip1"

    # gpiochip1 - 8 lines:
    #    line   0:      "BT_ON"   "shutdown"  output  active-high [used]
    #    line   1:      "WL_ON"       unused  output  active-high
    #    line   2: "PWR_LED_OFF" "PWR" output active-low [used]
    #    line   3: "GLOBAL_RESET" unused output active-high
    #    line   4: "VDD_SD_IO_SEL" "vdd-sd-io" output active-high [used]
    #    line   5:   "CAM_GPIO" "regulator-cam1" output active-high [used]
    #    line   6:  "SD_PWR_ON" "regulator-sd-vcc" output active-high [used]
    #    line   7:    "SD_OC_N"       unused   input  active-high
    BT_ON="0"
    WL_ON="1"

    NEED_RESET="0"
    CURRENT_STATE="0"
    for GPIO in "${BT_ON}" "${WL_ON}"; do
        PIN_VALUE="$(gpioget "${GPIOCHIP}" "${GPIO}")"

        if [ "$bootparam_balena_stage2" = "true" ]; then
            CURRENT_STATE=$(("${CURRENT_STATE}" | ("${PIN_VALUE}" << "${GPIO}")))
        elif [ -n "$bootparam_balena_pi4_fwgpio" ]; then
            NEW_VALUE=$((("$bootparam_balena_pi4_fwgpio" >> "${GPIO}") & 1))
            gpioset "${GPIOCHIP}" "${GPIO}=${NEW_VALUE}"

            if [ "${PIN_VALUE}" != "${NEW_VALUE}" ]; then
                NEED_RESET="1"
            fi
        fi
    done

    if [ "${NEED_RESET}" = "1" ]; then
        echo -n "${WIFI_DEV}" > "${WIFI_DRIVER_DIR}/unbind"
        echo -n "${WIFI_DEV}" > "${WIFI_DRIVER_DIR}/bind"
    fi

    if [ "$bootparam_balena_stage2" = "true" ]; then
        export KEXEC_EXTRA_ARGS="${KEXEC_EXTRA_ARGS} balena_pi4_fwgpio=${CURRENT_STATE}"
    fi
}
